---

- name: detect binary file for glauth
  delegate_to: "{{ glauth_delegate_to }}"
  become: false
  run_once: "{{ 'false' if glauth_direct_download else 'true' }}"
  find:
    paths: "{{ glauth_local_tmp_directory }}"
    file_type: file
    patterns:
      - "glauth"
      - "glauth-linux-amd64"
    recurse: true
  register: _detected_binary

- name: detect glauth plugins
  delegate_to: "{{ glauth_delegate_to }}"
  become: false
  run_once: "{{ 'false' if glauth_direct_download else 'true' }}"
  find:
    paths: "{{ glauth_local_tmp_directory }}"
    file_type: file
    patterns:
      - "*.so"
    recurse: true
  register: _detected_plugins

- name: define plugin list
  set_fact:
    glauth_plugins: "{{ _detected_plugins.files | glauth_plugins }}"
  when:
    - _detected_plugins.files is defined
    - _detected_plugins.files | count > 0

- name: create glauth lib directory
  file:
    state: directory
    path: "{{ glauth_data_dir }}"
    mode: 0755

- name: install glauth
  include_tasks: install/glauth.yml
  when:
    - _detected_binary.files is defined
    - _detected_binary.files | count > 0

- name: install plugins
  include_tasks: install/plugins.yml
  when:
    - glauth_plugins | count > 0

- name: create local facts
  template:
    src: ansible_facts.j2
    dest: /etc/ansible/facts.d/glauth.fact
    mode: 0755

- name: systemd
  block:
    - name: create systemd service unit
      template:
        src: "init/systemd/glauth.service.j2"
        dest: "{{ systemd_lib_directory }}/glauth.service"
        owner: root
        group: root
        mode: 0644
      notify:
        - daemon-reload
        - restart glauth

    - name: create glauth run configuration
      template:
        src: "glauth.j2"
        dest: "{{ glauth_defaults_directory }}/glauth"
        force: true
        owner: root
        group: "{{ glauth_system_group }}"
        mode: 0640
      notify:
        - validate config
        - reload glauth
  when:
    - ansible_service_mgr | lower == "systemd"

- name: openrc
  block:
    - name: create openrc service configuration
      template:
        src: "init/openrc/conf.d/glauth.j2"
        dest: "/etc/conf.d/glauth"
        owner: root
        group: root
        mode: 0644

    - name: create openrc init configuration
      template:
        src: "init/openrc/init.d/glauth.j2"
        dest: "/etc/init.d/glauth"
        owner: root
        group: root
        mode: 0750
  when:
    - ansible_service_mgr | lower == "openrc"

...
